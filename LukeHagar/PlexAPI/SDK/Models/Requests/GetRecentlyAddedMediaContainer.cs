//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace LukeHagar.PlexAPI.SDK.Models.Requests
{
    using LukeHagar.PlexAPI.SDK.Models.Requests;
    using LukeHagar.PlexAPI.SDK.Utils;
    using Newtonsoft.Json;
    using System.Collections.Generic;
    
    public class GetRecentlyAddedMediaContainer
    {

        /// <summary>
        /// Number of media items returned in this response.
        /// </summary>
        [JsonProperty("size")]
        public int Size { get; set; } = default!;

        /// <summary>
        /// Total number of media items in the library.
        /// </summary>
        [JsonProperty("totalSize")]
        public int TotalSize { get; set; } = default!;

        /// <summary>
        /// Offset value for pagination.
        /// </summary>
        [JsonProperty("offset")]
        public long Offset { get; set; } = default!;

        /// <summary>
        /// Indicates whether syncing is allowed.
        /// </summary>
        [JsonProperty("allowSync")]
        public bool AllowSync { get; set; } = default!;

        /// <summary>
        /// An plugin identifier for the media container.
        /// </summary>
        [JsonProperty("identifier")]
        public string Identifier { get; set; } = default!;

        /// <summary>
        /// The Meta object is only included in the response if the `includeMeta` parameter is set to `1`.<br/>
        /// 
        /// <remarks>
        /// 
        /// </remarks>
        /// </summary>
        [JsonProperty("Meta")]
        public Meta? Meta { get; set; }

        /// <summary>
        /// An array of metadata items.
        /// </summary>
        [JsonProperty("Metadata")]
        public List<GetRecentlyAddedMetadata>? Metadata { get; set; }
    }
}