//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace LukeHagar.PlexAPI.SDK.Models.Requests
{
    using LukeHagar.PlexAPI.SDK.Utils;
    using Newtonsoft.Json;
    using System;
    using System.Collections.Concurrent;
    using System.Collections.Generic;
    using System.Linq;
    
    /// <summary>
    /// The library type
    /// </summary>
    [JsonConverter(typeof(OpenEnumConverter))]
    public class GetAllLibrariesType : IEquatable<GetAllLibrariesType>
    {
        public static readonly GetAllLibrariesType Movie = new GetAllLibrariesType("movie");
        public static readonly GetAllLibrariesType TvShow = new GetAllLibrariesType("show");
        public static readonly GetAllLibrariesType Season = new GetAllLibrariesType("season");
        public static readonly GetAllLibrariesType Episode = new GetAllLibrariesType("episode");
        public static readonly GetAllLibrariesType Artist = new GetAllLibrariesType("artist");
        public static readonly GetAllLibrariesType Album = new GetAllLibrariesType("album");
        public static readonly GetAllLibrariesType Track = new GetAllLibrariesType("track");
        public static readonly GetAllLibrariesType PhotoAlbum = new GetAllLibrariesType("photoalbum");
        public static readonly GetAllLibrariesType Photo = new GetAllLibrariesType("photo");
        public static readonly GetAllLibrariesType Collection = new GetAllLibrariesType("collection");

        private static readonly Dictionary <string, GetAllLibrariesType> _knownValues =
            new Dictionary <string, GetAllLibrariesType> ()
            {
                ["movie"] = Movie,
                ["show"] = TvShow,
                ["season"] = Season,
                ["episode"] = Episode,
                ["artist"] = Artist,
                ["album"] = Album,
                ["track"] = Track,
                ["photoalbum"] = PhotoAlbum,
                ["photo"] = Photo,
                ["collection"] = Collection
            };

        private static readonly ConcurrentDictionary<string, GetAllLibrariesType> _values =
            new ConcurrentDictionary<string, GetAllLibrariesType>(_knownValues);

        private GetAllLibrariesType(string value)
        {
            if (value == null) throw new ArgumentNullException(nameof(value));
            Value = value;
        }

        public string Value { get; }

        public static GetAllLibrariesType Of(string value)
        {
            return _values.GetOrAdd(value, _ => new GetAllLibrariesType(value));
        }

        public static implicit operator GetAllLibrariesType(string value) => Of(value);
        public static implicit operator string(GetAllLibrariesType getalllibrariestype) => getalllibrariestype.Value;

        public static GetAllLibrariesType[] Values()
        {
            return _values.Values.ToArray();
        }

        public override string ToString() => Value.ToString();

        public bool IsKnown()
        {
            return _knownValues.ContainsKey(Value);
        }

        public override bool Equals(object? obj) => Equals(obj as GetAllLibrariesType);

        public bool Equals(GetAllLibrariesType? other)
        {
            if (ReferenceEquals(this, other)) return true;
            if (other is null) return false;
            return string.Equals(Value, other.Value);
        }

        public override int GetHashCode() => Value.GetHashCode();
    }

}