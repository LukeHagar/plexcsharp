//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace LukeHagar.PlexAPI.SDK.Models.Requests
{
    using LukeHagar.PlexAPI.SDK.Utils;
    using Newtonsoft.Json;
    using System;
    
    /// <summary>
    /// The library type
    /// </summary>
    public enum GetAllLibrariesType
    {
        [JsonProperty("movie")]
        Movie,
        [JsonProperty("show")]
        TvShow,
        [JsonProperty("season")]
        Season,
        [JsonProperty("episode")]
        Episode,
        [JsonProperty("artist")]
        Artist,
        [JsonProperty("album")]
        Album,
        [JsonProperty("track")]
        Track,
        [JsonProperty("photoalbum")]
        PhotoAlbum,
        [JsonProperty("photo")]
        Photo,
        [JsonProperty("collection")]
        Collection,
    }

    public static class GetAllLibrariesTypeExtension
    {
        public static string Value(this GetAllLibrariesType value)
        {
            return ((JsonPropertyAttribute)value.GetType().GetMember(value.ToString())[0].GetCustomAttributes(typeof(JsonPropertyAttribute), false)[0]).PropertyName ?? value.ToString();
        }

        public static GetAllLibrariesType ToEnum(this string value)
        {
            foreach(var field in typeof(GetAllLibrariesType).GetFields())
            {
                var attributes = field.GetCustomAttributes(typeof(JsonPropertyAttribute), false);
                if (attributes.Length == 0)
                {
                    continue;
                }

                var attribute = attributes[0] as JsonPropertyAttribute;
                if (attribute != null && attribute.PropertyName == value)
                {
                    var enumVal = field.GetValue(null);

                    if (enumVal is GetAllLibrariesType)
                    {
                        return (GetAllLibrariesType)enumVal;
                    }
                }
            }

            throw new Exception($"Unknown value {value} for enum GetAllLibrariesType");
        }
    }

}